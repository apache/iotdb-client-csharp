/**
 * Autogenerated by Thrift Compiler (0.15.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

public static class clientExtensions
{
  public static bool Equals(this Dictionary<string, int> instance, object that)
  {
    if (!(that is Dictionary<string, int> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this Dictionary<string, int> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this Dictionary<string, string> instance, object that)
  {
    if (!(that is Dictionary<string, string> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this Dictionary<string, string> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<Dictionary<string, string>> instance, object that)
  {
    if (!(that is List<Dictionary<string, string>> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<Dictionary<string, string>> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<List<int>> instance, object that)
  {
    if (!(that is List<List<int>> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<List<int>> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<List<string>> instance, object that)
  {
    if (!(that is List<List<string>> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<List<string>> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<TAggregationType> instance, object that)
  {
    if (!(that is List<TAggregationType> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<TAggregationType> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<TSConnectionInfo> instance, object that)
  {
    if (!(that is List<TSConnectionInfo> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<TSConnectionInfo> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<TSStatus> instance, object that)
  {
    if (!(that is List<TSStatus> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<TSStatus> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<byte[]> instance, object that)
  {
    if (!(that is List<byte[]> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<byte[]> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<int> instance, object that)
  {
    if (!(that is List<int> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<int> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<long> instance, object that)
  {
    if (!(that is List<long> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<long> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<sbyte> instance, object that)
  {
    if (!(that is List<sbyte> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<sbyte> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static bool Equals(this List<string> instance, object that)
  {
    if (!(that is List<string> other)) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<string> instance)
  {
    return TCollections.GetHashCode(instance);
  }


}
